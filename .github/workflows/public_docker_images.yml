# https://docs.github.com/en/actions/publishing-packages/publishing-docker-images#publishing-images-to-github-packages
#
name: Docker image on ghcr.io

on:
  push:
    branches: main
    tags:
      - 'v*'
  pull_request:
    branches: main
  schedule:
    - cron: '0 2 * * 1'  # At 02:00 on Monday

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        # Must match version at https://www.python.org/ftp/python/
        python: ["3.8.18", "3.9.18", "3.10.13"]
        framework: ["tf", "torch"]

    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # used on schedule event
            type=schedule,pattern={{date 'YYYY-MM-DD'}}
            # set latest tag only if `enable` is True
            type=raw,value=latest,enable=${{ matrix.framework == 'tf' && matrix.python == '3.8.18' && github.ref == format('refs/heads/{0}', 'main') }}
            # used on push tag event
            type=semver,pattern={{raw}},prefix=${{ matrix.framework }}-py${{ matrix.python }}-
            # the rest
            type=sha,prefix=${{ matrix.framework }}-py${{ matrix.python }}-

      - name: Build and push Docker image (latest)
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          build-args: |
            FRAMEWORK=${{ matrix.framework }}
            PYTHON_VERSION=${{ matrix.python }}
            DOCTR_VERSION=${{ github.sha }}
          push: false  # TODO: CHANGE ME
          tags: ${{ steps.meta.outputs.tags }}
