name: demo

on:
  push:
    branches: main
  pull_request:
    branches: main

jobs:
  test-demo:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python: [3.8]
        framework: [tensorflow, pytorch]
    steps:
      - if: matrix.os == 'macos-latest'
        name: Install MacOS prerequisites
        run: brew install cairo pango gdk-pixbuf libffi
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
          architecture: x64
      - if: matrix.framework == 'tensorflow'
        name: Cache python modules (TF)
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pkg-deps-${{ matrix.python }}-${{ hashFiles('requirements.txt') }}-${{ hashFiles('demo/tensorflow/requirements.txt') }}
      - if: matrix.framework == 'pytorch'
        name: Cache python modules (PT)
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pkg-deps-${{ matrix.python }}-${{ hashFiles('requirements.txt') }}-${{ hashFiles('demo/pytorch/requirements.txt') }}

      - if: matrix.framework == 'tensorflow'
        name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[tf] --upgrade
          pip install -r demo/tensorflow/requirements.txt
      - if: matrix.framework == 'pytorch'
        name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[torch] --upgrade
          pip install -r demo/pytorch/requirements.txt

      - name: Run demo
        run: |
          streamlit --version
          screen -dm streamlit run demo/app.py
          sleep 10
          curl http://localhost:8501/docs

